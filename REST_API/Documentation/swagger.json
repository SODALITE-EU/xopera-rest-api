{
  "swagger": "2.0",
  "basePath": "/",
  "paths": {
    "/deploy/{blueprint_token}": {
      "parameters": [
        {
          "in": "path",
          "description": "token of blueprint",
          "name": "blueprint_token",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "responses": {
          "403": {
            "description": "Undeploy not allowed",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          },
          "404": {
            "description": "Did not find blueprint",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          },
          "202": {
            "description": "Undeploy job accepted",
            "schema": {
              "$ref": "#/definitions/blueprint_metadata"
            }
          }
        },
        "operationId": "delete_deploy",
        "parameters": [
          {
            "name": "inputs_file",
            "in": "formData",
            "type": "file",
            "description": "File with inputs for TOSCA template"
          },
          {
            "name": "version_tag",
            "in": "query",
            "type": "string",
            "description": "version_tag to deploy"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "deploy"
        ]
      },
      "post": {
        "responses": {
          "404": {
            "description": "Did not find blueprint",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          },
          "202": {
            "description": "Deploy job accepted",
            "schema": {
              "$ref": "#/definitions/blueprint_metadata"
            }
          }
        },
        "operationId": "post_deploy",
        "parameters": [
          {
            "name": "inputs_file",
            "in": "formData",
            "type": "file",
            "description": "File with inputs for TOSCA template"
          },
          {
            "name": "version_tag",
            "in": "query",
            "type": "string",
            "description": "version_tag to deploy"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "deploy"
        ]
      }
    },
    "/info/log/deployment": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Log file not found",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          }
        },
        "operationId": "get_deploy_log",
        "parameters": [
          {
            "in": "query",
            "description": "token of blueprint",
            "name": "blueprint_token",
            "type": "string"
          },
          {
            "in": "query",
            "description": "token of session",
            "name": "session_token",
            "type": "string"
          }
        ],
        "tags": [
          "info"
        ]
      }
    },
    "/info/log/git/{blueprint_token}": {
      "parameters": [
        {
          "name": "blueprint_token",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Log file not found",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          }
        },
        "operationId": "get_git_log",
        "parameters": [
          {
            "name": "version_tag",
            "in": "query",
            "type": "string",
            "description": "version_tag of blueprint"
          },
          {
            "name": "all",
            "in": "query",
            "type": "boolean",
            "description": "show all database entries, not just last one"
          }
        ],
        "tags": [
          "info"
        ]
      }
    },
    "/info/status": {
      "get": {
        "responses": {
          "202": {
            "description": "Job accepted, still running"
          },
          "201": {
            "description": "Job done"
          },
          "500": {
            "description": "Job failed"
          }
        },
        "operationId": "get_status",
        "parameters": [
          {
            "in": "query",
            "description": "long or short",
            "name": "format",
            "type": "string"
          },
          {
            "in": "query",
            "description": "session_token",
            "name": "token",
            "type": "string"
          }
        ],
        "tags": [
          "info"
        ]
      }
    },
    "/manage": {
      "post": {
        "responses": {
          "406": {
            "description": "Format not acceptable",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          },
          "200": {
            "description": "Successfully saved blueprint to database",
            "schema": {
              "$ref": "#/definitions/blueprint_metadata"
            }
          }
        },
        "operationId": "post_new_blueprint_csar",
        "parameters": [
          {
            "name": "CSAR",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "TOSCA Cloud Service Archive"
          },
          {
            "name": "revision_msg",
            "in": "query",
            "type": "string",
            "description": "Optional comment on submission"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "manage"
        ]
      }
    },
    "/manage/{blueprint_token}": {
      "parameters": [
        {
          "in": "path",
          "description": "token of blueprint",
          "name": "blueprint_token",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "responses": {
          "403": {
            "description": "Did not undeploy yet, not allowed",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          },
          "404": {
            "description": "Blueprint not found",
            "schema": {
              "$ref": "#/definitions/delete_metadata"
            }
          },
          "200": {
            "description": "Successfully removed",
            "schema": {
              "$ref": "#/definitions/delete_metadata"
            }
          }
        },
        "operationId": "delete_manage_csar",
        "parameters": [
          {
            "name": "version_tag",
            "in": "query",
            "type": "string",
            "description": "version_tag to delete"
          },
          {
            "name": "force",
            "in": "query",
            "type": "boolean",
            "description": "force delete blueprint"
          }
        ],
        "tags": [
          "manage"
        ]
      },
      "post": {
        "responses": {
          "406": {
            "description": "Format not acceptable",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          },
          "404": {
            "description": "Blueprint token not found",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          },
          "200": {
            "description": "Successfully saved blueprint to database",
            "schema": {
              "$ref": "#/definitions/blueprint_metadata"
            }
          }
        },
        "operationId": "post_manage_csar",
        "parameters": [
          {
            "name": "CSAR",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "TOSCA Cloud Service Archive"
          },
          {
            "name": "revision_msg",
            "in": "query",
            "type": "string",
            "description": "Optional comment on submission"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "manage"
        ]
      }
    },
    "/manage/{blueprint_token}/user": {
      "parameters": [
        {
          "in": "path",
          "description": "token of blueprint",
          "name": "blueprint_token",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "500": {
            "description": "DB error when getting user list",
            "schema": {
              "$ref": "#/definitions/error_msg"
            }
          },
          "404": {
            "description": "blueprint not found",
            "schema": {
              "$ref": "#/definitions/collaborators_list"
            }
          },
          "200": {
            "description": "user list returned",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          }
        },
        "operationId": "get_git_user_manage",
        "tags": [
          "manage"
        ]
      },
      "post": {
        "responses": {
          "500": {
            "description": "DB error when adding user",
            "schema": {
              "$ref": "#/definitions/error_msg"
            }
          },
          "404": {
            "description": "blueprint not found",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          },
          "201": {
            "description": "invite sent",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          }
        },
        "operationId": "post_git_user_manage",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "username of user to be added to repository with blueprint"
          }
        ],
        "tags": [
          "manage"
        ]
      }
    },
    "/ssh/keys/public": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/openstack key pair"
            }
          },
          "404": {
            "description": "ssh key pair missing",
            "schema": {
              "$ref": "#/definitions/just_message"
            }
          }
        },
        "operationId": "get_public_key",
        "tags": [
          "ssh"
        ]
      }
    }
  },
  "info": {
    "title": "xOpera REST api",
    "version": "beta",
    "description": "Standard scenarios of using REST api:\n\nFIRST RUN\n- GET key pair via ssh/keys/public download and register it on your openstack\n\nDEPLOY\n1) upload blueprint with POST to /manage\n - new version of existing one must be POSTed to /manage/{blueprint_token}\n - save blueprint_metadata, returned by API call -> it is the only way of accessing your blueprint afterwards\n 2) deploy last version of blueprint with POST to /deploy/{blueprint_token}\n- optionally, inputs file to be used with template must also be uploaded within same API call\n- another version can be specified by version_tag\n- save session_token\n3) using status_token from with GET to /info/status check status of your job\n4) After completion, check logs with GET to /info/log/deployment\n\nUNDEPLOY\n1) undeploy blueprint with DELETE to /deploy/{blueprint_token}\n- optionally, inputs file to be used with template must also be uploaded within same API call\n - optionally also in combination with version_tag\n - save session_token\n 2) using status_token with GET to /info/status check status of your job\n3) After completion, check logs with GET to /info/log/deployment\n4) Delete all versions of blueprint from database with DELETE to /manage/{blueprint_token}\n- to delete just specific version, use version_id or timestamp\n- if deployment from template has not been undeployed yet, blueprint cannot be deleted-> use 'force' to override\n\nACCESS TO REPOSITORY WITH BLUEPRINTS\n- xOpera REST API uses git backend for storing blueprints\n- to obtain access, POST to /manage/<blueprint_token>/user endpoint username and invitation will be sent\n- with GET to /manage/<blueprint_token>/user user can obtain list of collaborators and repo url\n\nGIT LOGS\n- Last transaction details for gitCsarDB can be inspected using /info/log/git/{blueprint_token} endpoint.\n- optionally, logs inspection can be further specified with version_tag\n- if all=True, all logs that satisfy blueprint_token and version_tag conditions will be returned\n\n"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "ssh",
      "description": "SSH key management"
    },
    {
      "name": "manage",
      "description": "save or delete blueprint"
    },
    {
      "name": "deploy",
      "description": "deploy or undeploy blueprint"
    },
    {
      "name": "info",
      "description": "information about deployment"
    }
  ],
  "definitions": {
    "openstack key pair": {
      "required": [
        "key_pair_name",
        "public_key"
      ],
      "properties": {
        "key_pair_name": {
          "type": "string",
          "description": "Name of xOpera REST API's  private/public key pair"
        },
        "public_key": {
          "type": "string",
          "description": "Rest api's public key"
        }
      },
      "type": "object"
    },
    "just_message": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "return message"
        }
      },
      "type": "object"
    },
    "error_msg": {
      "required": [
        "description",
        "stacktrace"
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "Error description"
        },
        "stacktrace": {
          "type": "string",
          "description": "Exception stacktrace"
        }
      },
      "type": "object"
    },
    "collaborators_list": {
      "required": [
        "blueprint_token",
        "collaborators",
        "message",
        "repo_url"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "return message"
        },
        "blueprint_token": {
          "type": "string",
          "description": "token of blueprint"
        },
        "repo_url": {
          "type": "string",
          "description": "Url to repository"
        },
        "collaborators": {
          "type": "array",
          "description": "List of collaborators",
          "items": {
            "type": "string",
            "description": "Collaborator"
          }
        }
      },
      "type": "object"
    },
    "delete_metadata": {
      "required": [
        "blueprint_token",
        "deleted_database_entries",
        "force",
        "message",
        "timestamp",
        "version_tag"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "return message"
        },
        "blueprint_token": {
          "type": "string",
          "description": "token of blueprint"
        },
        "version_tag": {
          "type": "integer",
          "description": "id of current version of blueprint"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "timestamp of database entry"
        },
        "deleted_database_entries": {
          "type": "integer",
          "description": "Number of deleted entries"
        },
        "force": {
          "type": "boolean",
          "description": "did we do it with force or not"
        }
      },
      "type": "object"
    },
    "blueprint_metadata": {
      "required": [
        "blueprint_token",
        "message",
        "timestamp",
        "version_tag"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "return message"
        },
        "blueprint_token": {
          "type": "string",
          "description": "token of blueprint"
        },
        "session_token": {
          "type": "string",
          "description": "token of deploying session"
        },
        "version_tag": {
          "type": "integer",
          "description": "version_tag blueprint"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "timestamp of database entry"
        }
      },
      "type": "object"
    }
  },
  "responses": {
    "ParseError": {
      "description": "When a mask can't be parsed"
    },
    "MaskError": {
      "description": "When any error occurs on mask"
    }
  }
}