openapi: 3.0.1
info:
  version: 2.8.2
  title: xOpera REST API
  contact:
    email: mihael.trajbaric@xlab.si
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: |+
    xOpera REST API with xOpera==0.6.6 orchestrator and Gitlab / Github integation for blueprint management

#servers:
#- url: /
tags:
- name: ssh
  description: SSH key management
- name: blueprint
  description: Blueprint management
- name: blueprint-meta
  description: Blueprint metadata management
- name: validation
  description: Blueprint validation
- name: deployment
  description: Interaction with Deployed instance
paths:
  /ssh/keys/public:
    get:
      summary: "Get xOpera's public key."
      tags:
      - ssh
      operationId: get_public_key
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyPair'
        404:
          description: ssh key pair missing
          content:
            application/json:
              schema:
                type: string

  /blueprint:
    post:
      summary: "Add new blueprint."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - blueprint
      operationId: post_new_blueprint
      parameters:
      - name: revision_msg
        in: query
        description: Optional comment on submission
        schema:
          type: string
      - name: blueprint_name
        in: query
        description: Optional human-readable blueprint name
        schema:
          type: string
      - name: aadm_id
        in: query
        description: End-to-end debugging id
        schema:
          type: string
      - name: username
        in: query
        description: User's username
        schema:
          type: string
      - name: project_domain
        in: query
        description: Optional project domain this blueprint belongs to
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
              - CSAR
              properties:
                CSAR:
                  type: string
                  description: TOSCA Cloud Service Archive
                  format: binary
        required: true
      responses:
        201:
          description: Successfully saved blueprint to database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintVersion'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        406:
          description: Format not acceptable
          content:
            application/json:
              schema:
                type: string
        500:
          description: DB or REST API exception
          content:
            application/json:
              schema:
                type: string

    get:
      summary: "Get blueprints for user or project domain"
      security:
        - apiKey: [ ]
        - oauth2: [ email ]
      tags:
        - blueprint
      operationId: get_blueprints_user_domain
      parameters:
        - name: username
          in: query
          description: username
          required: false
          schema:
            type: string
        - name: project_domain
          in: query
          description: Project domain
          required: false
          schema:
            type: string
        - name: active
          in: query
          description: Obtain only list of blueprints with deployments.
          required: false
          schema:
            type: boolean
            default: true
      responses:
        200:
          description: List of blueprints returned
          content:
            application/json:
              schema:
                type: array
                description: List of blueprints for current user or project_domain
                items:
                  $ref: '#/components/schemas/Blueprint'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: User or project domain not found
          content:
            application/json:
              schema:
                type: string
        500:
          description: DB or REST API error
          content:
            application/json:
              schema:
                type: string


  /blueprint/{blueprint_id}:
    post:
      summary: "Add new version to existing blueprint."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - blueprint
      operationId: post_blueprint
      parameters:
      - name: blueprint_id
        in: path
        description: Id of blueprint
        required: true
        schema:
          type: string
          format: uuid
      - name: revision_msg
        in: query
        description: Optional comment on submission
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
              - CSAR
              properties:
                CSAR:
                  type: string
                  description: TOSCA Cloud Service Archive
                  format: binary
        required: true
      responses:
        201:
          description: Successfully saved blueprint to database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintVersion'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Blueprint not found
          content:
            application/json:
              schema:
                type: string
        406:
          description: Format not acceptable
          content:
            application/json:
              schema:
                type: string
    delete:
      summary: "Delete blueprint."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - blueprint
      operationId: delete_blueprint
      parameters:
      - name: blueprint_id
        in: path
        description: Id of blueprint
        required: true
        schema:
          type: string
          format: uuid
      - name: force
        in: query
        description: force delete blueprint
        schema:
          type: boolean
      responses:
        200:
          description: Successfully removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintVersion'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        403:
          description: Did not undeploy yet, not allowed
          content:
            application/json:
              schema:
                type: string
        404:
          description: Blueprint not found
          content:
            application/json:
              schema:
                type: string

  /blueprint/{blueprint_id}/version/{version_id}:
    delete:
      summary: "Delete version of blueprint."
      security:
        - apiKey: [ ]
        - oauth2: [ email ]
      tags:
        - blueprint
      operationId: delete_blueprint_version
      parameters:
        - name: blueprint_id
          in: path
          description: Id of blueprint
          required: true
          schema:
            type: string
            format: uuid
        - name: version_id
          in: path
          description: Id of blueprint version
          required: true
          schema:
            type: string
            pattern: '^v(0|[1-9][0-9]*).(0|[1-9][0-9]*)$'
        - name: force
          in: query
          description: force delete blueprint
          schema:
            type: boolean
      responses:
        200:
          description: Successfully removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintVersion'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        403:
          description: Did not undeploy yet, not allowed
          content:
            application/json:
              schema:
                type: string
        404:
          description: Blueprint not found
          content:
            application/json:
              schema:
                type: string

  /blueprint/{blueprint_id}/meta:
    get:
      summary: "Get blueprint's metadata"
      security:
        - apiKey: [ ]
        - oauth2: [ email ]
      tags:
        - blueprint-meta
      operationId: get_blueprint_meta
      parameters:
        - name: blueprint_id
          in: path
          description: Id of blueprint
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Metadata returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintVersion'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Blueprint not found
          content:
            application/json:
              schema:
                type: string
        500:
          description: DB or REST API error
          content:
            application/json:
              schema:
                type: string

  /blueprint/{blueprint_id}/version/{version_id}/meta:
    get:
      summary: "Get blueprint version's metadata"
      security:
        - apiKey: [ ]
        - oauth2: [ email ]
      tags:
        - blueprint-meta
      operationId: get_blueprint_version_meta
      parameters:
        - name: blueprint_id
          in: path
          description: Id of blueprint
          required: true
          schema:
            type: string
            format: uuid
        - name: version_id
          in: path
          description: Id of blueprint version
          required: true
          schema:
            type: string
            pattern: '^v(0|[1-9][0-9]*).(0|[1-9][0-9]*)$'
      responses:
        200:
          description: Metadata returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintVersion'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Blueprint not found
          content:
            application/json:
              schema:
                type: string
        500:
          description: DB or REST API error
          content:
            application/json:
              schema:
                type: string

  /blueprint/{blueprint_id}/name:
    get:
      summary: "Get blueprint name"
      security:
        - apiKey: [ ]
        - oauth2: [ email ]
      tags:
        - blueprint-meta
      operationId: get_blueprint_name
      parameters:
        - name: blueprint_id
          in: path
          description: Id of blueprint
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Name returned
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Blueprint not found
          content:
            application/json:
              schema:
                type: string
        500:
          description: DB or REST API error
          content:
            application/json:
              schema:
                type: string
    post:
      summary: "Change blueprint name"
      security:
        - apiKey: [ ]
        - oauth2: [ email ]
      tags:
        - blueprint-meta
      operationId: post_blueprint_name
      parameters:
        - name: blueprint_id
          in: path
          description: Id of blueprint
          required: true
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          description: Desired blueprint name
          required: true
          schema:
            type: string
      responses:
        201:
          description: Name changed
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Blueprint not found
          content:
            application/json:
              schema:
                type: string
        500:
          description: DB or REST API error
          content:
            application/json:
              schema:
                type: string

  /blueprint/{blueprint_id}/deployments:
    get:
      summary: "Get deployments for current blueprint"
      security:
        - apiKey: [ ]
        - oauth2: [ email ]
      tags:
        - blueprint-meta
      operationId: get_blueprint_deployments
      parameters:
        - name: blueprint_id
          in: path
          description: Id of blueprint
          required: true
          schema:
            type: string
            format: uuid
        - name: active
          in: query
          description: Obtain only list of active deployments.
          required: false
          schema:
            type: boolean
            default: true
      responses:
        200:
          description: Deployments returned
          content:
            application/json:
              schema:
                type: array
                description: List of deployments from current blueprint
                items:
                  $ref: '#/components/schemas/Deployment'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Blueprint not found
          content:
            application/json:
              schema:
                type: string
        500:
          description: DB or REST API error
          content:
            application/json:
              schema:
                type: string


  /blueprint/{blueprint_id}/user:
    get:
      summary: "List users with access."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - blueprint
      operationId: get_git_user
      parameters:
      - name: blueprint_id
        in: path
        description: Id of blueprint
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: User list returned
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Blueprint not found
          content:
            application/json:
              schema:
                type: string
        500:
          description: DB or REST API error
          content:
            application/json:
              schema:
                type: string

  /blueprint/{blueprint_id}/user/{user_id}:
    post:
      summary: "Add user to blueprint."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - blueprint
      operationId: post_git_user
      parameters:
      - name: blueprint_id
        in: path
        description: Id of blueprint
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: path
        description: Username to be added to repository with blueprint
        required: true
        schema:
          type: string
      responses:
        200:
          description: User added or invite sent
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: blueprint not found
          content:
            application/json:
              schema:
                type: string
        500:
          description: DB or REST API error
          content:
            application/json:
              schema:
                type: string
    delete:
      summary: "Delete user."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - blueprint
      operationId: delete_git_user
      parameters:
      - name: blueprint_id
        in: path
        description: Id of blueprint
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: path
        description: Username to be removed from repository with blueprint
        required: true
        schema:
          type: string
      responses:
        200:
          description: User deleted
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Blueprint not found
          content:
            application/json:
              schema:
                type: string
        500:
          description: DB or REST API error
          content:
            application/json:
              schema:
                type: string

  /blueprint/{blueprint_id}/validate:
    put:
      summary: "Validate last version of existing blueprint."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - validation
      operationId: validate_existing
      description: Validates TOSCA service template
      parameters:
      - name: blueprint_id
        in: path
        description: Id of TOSCA blueprint
        required: true
        schema:
          type: string
          format: uuid

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                inputs_file:
                  type: string
                  description: File with inputs TOSCA blueprint
                  format: binary
      responses:
        200:
          description: Blueprint validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintValidation'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Did not find blueprint
          content:
            application/json:
              schema:
                type: string

  /blueprint/{blueprint_id}/version/{version_id}/validate:
    put:
      summary: "Validate specific version of existing blueprint."
      security:
        - apiKey: [ ]
        - oauth2: [ email ]
      tags:
        - validation
      operationId: validate_existing_version
      description: Validates TOSCA service template
      parameters:
        - name: blueprint_id
          in: path
          description: Id of TOSCA blueprint
          required: true
          schema:
            type: string
            format: uuid
        - name: version_id
          in: path
          description: Id of blueprint version
          required: true
          schema:
            type: string
            pattern: '^v(0|[1-9][0-9]*).(0|[1-9][0-9]*)$'

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                inputs_file:
                  type: string
                  description: File with inputs TOSCA blueprint
                  format: binary
      responses:
        200:
          description: Blueprint validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintValidation'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Did not find blueprint
          content:
            application/json:
              schema:
                type: string

  /blueprint/validate:
    put:
      summary: "Validate new blueprint."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - validation
      operationId: validate_new
      description: Validates TOSCA service template
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
              - CSAR
              properties:
                CSAR:
                  type: string
                  description: TOSCA Cloud Service Archive
                  format: binary
                inputs_file:
                  type: string
                  description: File with inputs for TOSCA blueprint
                  format: binary
        required: true
      responses:
        200:
          description: Blueprint validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintValidation'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Did not find blueprint
          content:
            application/json:
              schema:
                type: string


  /blueprint/{blueprint_id}/git_history:
    get:
      summary: "List all update/delete transactions to git repository with blueprint."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - blueprint-meta
      operationId: get_git_log
      parameters:
      - name: blueprint_id
        in: path
        description: Id of blueprint
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitLog'
        404:
          description: Log file not found
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string

  /deployment/deploy:
    post:
      summary: "Initialize deployment and deploy"
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - deployment
      operationId: post_deploy_fresh
      parameters:
      - name: blueprint_id
        in: query
        description: Id of blueprint
        required: true
        schema:
          type: string
          format: uuid
      - name: version_id
        in: query
        description: version_tag to deploy
        schema:
          type: string
          pattern: '^v(0|[1-9][0-9]*).(0|[1-9][0-9]*)$'
      - name: deployment_label
        in: query
        description: Human-readable deployment label
        schema:
          type: string
      - name: workers
        in: query
        description: Number of workers
        schema:
          type: integer
          default: 1

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                inputs_file:
                  type: string
                  description: File with inputs for TOSCA template
                  format: binary
      responses:
        202:
          description: Deploy job accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invocation'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Did not find blueprint
          content:
            application/json:
              schema:
                type: string

  /deployment/{deployment_id}/status:
    get:
      summary: "Get deployment status"
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - deployment
      operationId: get_status
      parameters:
      - name: deployment_id
        in: path
        description: Id of deployment
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Job found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invocation'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Job not found
          content:
            application/json:
              schema:
                type: string

  /deployment/{deployment_id}/history:
    get:
      summary: "Get deployment history"
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - deployment
      operationId: get_deploy_log
      parameters:
      - name: deployment_id
        in: path
        description: Id of deployment
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invocation'
        404:
          description: Log file not found
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string

  /deployment/{deployment_id}/deploy_continue:
    post:
      summary: "Continue deploy"
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - deployment
      operationId: post_deploy_continue
      parameters:
      - name: deployment_id
        in: path
        description: Id of deployment
        required: true
        schema:
          type: string
          format: uuid
      - name: workers
        in: query
        description: Number of workers
        schema:
          type: integer
          default: 1
      - name: clean_state
        in: query
        description: Clean previous state and start over
        schema:
          type: boolean
          default: False

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                inputs_file:
                  type: string
                  description: File with inputs for TOSCA template
                  format: binary
      responses:
        202:
          description: Deploy job accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invocation'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        403:
          description: Not allowed, previous operation on deployment still running
          content:
            application/json:
              schema:
                type: string
        404:
          description: Did not find blueprint
          content:
            application/json:
              schema:
                type: string

  /deployment/{deployment_id}/diff:
    put:
      summary: "Calculate diff between deployment and new blueprint."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - deployment
      operationId: post_diff
      description: Calculates the diff betweeen Deployed instance model (DI1) and New blueprint version (DB2 = B2 + V2 + I2)
      parameters:
      - name: deployment_id
        in: path
        description: Id of Deployed instance model (DI1)
        required: true
        schema:
          type: string
          format: uuid
      - name: blueprint_id
        in: query
        description: Id of The new blueprint (B2)
        required: true
        schema:
          type: string
          format: uuid
      - name: version_id
        in: query
        description: Id of version of The new blueprint (V2)
        schema:
          type: string
          pattern: '^v(0|[1-9][0-9]*).(0|[1-9][0-9]*)$'

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                inputs_file:
                  type: string
                  description: File with inputs for The new blueprint (I2)
                  format: binary
      responses:
        200:
          description: Diff calculated
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        404:
          description: Did not find DI1 or DB2
          content:
            application/json:
              schema:
                type: string

  /deployment/{deployment_id}/update:
    post:
      summary: "Update deployment with new blueprint."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - deployment
      operationId: post_update
      description: Deployes Instance model (DI2), where DI2 = diff(DI1, (B2,V2,I2))
      parameters:
      - name: deployment_id
        in: path
        description: Id of Deployed instance model (DI1)
        required: true
        schema:
          type: string
          format: uuid
      - name: blueprint_id
        in: query
        description: Id of the new blueprint (B2)
        required: true
        schema:
          type: string
          format: uuid
      - name: version_id
        in: query
        description: Id of version of the new blueprint (V2)
        schema:
          type: string
          pattern: '^v(0|[1-9][0-9]*).(0|[1-9][0-9]*)$'
      - name: workers
        in: query
        description: Number of workers
        schema:
          type: integer
          default: 1

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                inputs_file:
                  type: string
                  description: File with inputs for the new blueprint (I2)
                  format: binary
      responses:
        202:
          description: Update job accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invocation'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        403:
          description: Not allowed, previous operation on deployment still running
          content:
            application/json:
              schema:
                type: string
        404:
          description: Did not find DI1 or DB2
          content:
            application/json:
              schema:
                type: string

  /deployment/{deployment_id}/undeploy:
    post:
      summary: "Undeploy deployment."
      security:
        - apiKey: []
        - oauth2: [email]
      tags:
      - deployment
      operationId: post_undeploy
      parameters:
      - name: deployment_id
        in: path
        description: Id of deployment
        required: true
        schema:
          type: string
          format: uuid
      - name: workers
        in: query
        description: Number of workers
        schema:
          type: integer
          default: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                inputs_file:
                  type: string
                  description: File with inputs for TOSCA template
                  format: binary
      responses:
        202:
          description: Undeploy job accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invocation'
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        403:
          description: Not allowed, previous operation on deployment still running
          content:
            application/json:
              schema:
                type: string
        404:
          description: Did not find blueprint
          content:
            application/json:
              schema:
                type: string

  /deployment/{deployment_id}:
    delete:
      summary: "Delete all deployment data"
      description: "This endpoint deletes all data, about deployment, that are stored on xOpera REST API. It does not
      modify actual deployed instance. To undeploy actual instance, use /deployment/{deployment_id}/undeploy"
      security:
        - apiKey: [ ]
        - oauth2: [ email ]
      tags:
        - deployment
      operationId: delete_deployment
      parameters:
        - name: deployment_id
          in: path
          description: Id of deployment
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Deployment deleted.
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized request for this blueprint
          content:
            application/json:
              schema:
                type: string
        403:
          description: Not allowed, previous operation on deployment still running
          content:
            application/json:
              schema:
                type: string
        404:
          description: Did not find blueprint or deployment
          content:
            application/json:
              schema:
                type: string

        500:
          description: DB or REST API error
          content:
            application/json:
              schema:
                type: string

components:
  schemas:
    BlueprintValidation:
      required:
        - blueprint_valid
      type: object
      properties:
        blueprint_valid:
          type: boolean
          description: Blueprint is a valid TOSCA Cloud Service Archive
        error:
          type: string
          description: Error description
    KeyPair:
      required:
      - key_pair_name
      - public_key
      type: object
      properties:
        key_pair_name:
          type: string
          description: Name of xOpera REST API's  private/public key pair
        public_key:
          type: string
          description: Rest api's public key
    Blueprint:
      type: object
      required:
        - blueprint_id
        - timestamp
      properties:
        blueprint_id:
          type: string
          format: uuid
          description: Id of blueprint
        blueprint_name:
          type: string
          description: Name of the blueprint
        aadm_id:
          type: string
          description: End-to-end debugging id
        username:
          type: string
          description: Username of user, that created blueprint
        project_domain:
          type: string
          description: Domain name of the blueprint
        timestamp:
          type: string
          description: timestamp of database entry
          format: date-time

    BlueprintVersion:
      required:
        - blueprint_id
        - timestamp
        - url
      type: object
      properties:
        blueprint_id:
          type: string
          format: uuid
          description: Id of blueprint
        version_id:
          type: string
          pattern: '^v(0|[1-9][0-9]*).(0|[1-9][0-9]*)$'
          description: Id of blueprint version
        blueprint_name:
          type: string
          description: Name of the blueprint
        aadm_id:
          type: string
          description: End-to-end debugging id
        username:
          type: string
          description: Username of user, that created blueprint
        project_domain:
          type: string
          description: Domain name of the blueprint
        url:
          type: string
          format: uri
          description: Url of git repository
        timestamp:
          type: string
          description: timestamp of database entry
          format: date-time
        commit_sha:
          type: string
          description: SHA-1 checksum of commit

    GitLog:
      required:
        - blueprint_id
        - git_backend
        - job
        - timestamp
      type: object
      properties:
        blueprint_id:
          type: string
          description: Id of blueprint
          format: uuid
        commit_sha:
          type: string
          description: SHA-1 hash of commit
        git_backend:
          type: string
          description: Type of connector
        job:
          type: string
          description: Type of job
          enum: [ update, delete ]
        repo_url:
          type: string
          description: Url of git repository
          format: uri
        revision_msg:
          type: string
          description: Commit message
        timestamp:
          type: string
          description: Commit timestamp
          format: date-time
        version_id:
          type: string
          description: Id of version
          pattern: '^v(0|[1-9][0-9]*).(0|[1-9][0-9]*)$'

    Deployment:
      type: object
      required:
        - deployment_id
        - state
        - operation
        - timestamp
      properties:
        deployment_id:
          description: Id of deployment
          type: string
          format: uuid
        deployment_label:
          type: string
          description: Human-readable deployment name
        state:
          description: State of last invocation
          $ref: "#/components/schemas/InvocationState"
        operation:
          description: Type of last invocation
          $ref: "#/components/schemas/OperationType"
        last_inputs:
          description: Inputs from last invocation.
          type: object
          additionalProperties:
            type: string
        timestamp:
          description: An ISO8601 timestamp of when last job ended
          type: string
          format: date-time



    Invocation:
      description: An invocation of the deployment.
      type: object
      required:
        - blueprint_id
        - deployment_id
        - state
        - operation
        - timestamp_submission
      properties:
        blueprint_id:
          description: Id of blueprint
          type: string
          format: uuid
        version_id:
          description: Id of version of blueprint
          type: string
          pattern: '^v(0|[1-9][0-9]*).(0|[1-9][0-9]*)$'
        deployment_id:
          description: Id of deployment
          type: string
          format: uuid
        user_id:
          description: Id of user
          type: string
        deployment_label:
          description: Human-readable deployment name
          type: string
        state:
          $ref: "#/components/schemas/InvocationState"
        operation:
          $ref: "#/components/schemas/OperationType"
        timestamp_submission:
          description: An ISO8601 timestamp of submission of invocation.
          type: string
          format: date-time
        timestamp_start:
          description: An ISO8601 timestamp of when orchestration started
          type: string
          format: date-time
        timestamp_end:
          description: An ISO8601 timestamp of when orchestration ended
          type: string
          format: date-time
        inputs:
          description: Inputs provided for invocation.
          type: object
          additionalProperties:
            type: string
        instance_state:
          description: State of the instances defined in service template.
          type: object
          additionalProperties:
            type: string
        outputs:
          description: Outputs of the instances defined in service template.
          type: object
          additionalProperties:
            type: string
        exception:
          description: An internal xOpera error that occurred during the operation.
          type: string
        stdout:
          description: xOpera console output for operation.
          type: string
        stderr:
          description: xOpera error output for operation.
          type: string
        workers:
          description: Number of workers for parallel execution
          type: integer
        clean_state:
          description: Clean previous state and start over
          type: boolean
    InvocationState:
      type: string
      enum:
        - pending
        - in_progress
        - success
        - failed
    OperationType:
      type: string
      enum:
        - deploy_continue
        - deploy_fresh
        - undeploy
        - update

  securitySchemes:
    apiKey:
      type: apiKey
      x-apikeyInfoFunc: opera.api.controllers.security_controller.check_api_key
      name: X-API-Key
      in: header
    oauth2:
      flows:
        password: 
          tokenUrl: http://keycloak:8080/auth/realms/SODALITE/protocol/openid-connect/token
          scopes:
            email: Email of the user accessing the service.
      type: oauth2
      x-tokenInfoFunc: opera.api.controllers.security_controller.token_info
      x-scopeValidateFunc: opera.api.controllers.security_controller.validate_scope   

