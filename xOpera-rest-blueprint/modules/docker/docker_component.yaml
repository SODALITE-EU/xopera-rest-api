tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - docker_registry.yaml
  - docker_network.yaml

node_types:

  sodalite.nodes.DockerizedComponent:  
    derived_from: tosca.nodes.SoftwareComponent 
    properties:  
      registry_url:  
        description: The URL of the registry containing images 
        required: True 
        type: string     
      command:  
        description: Commands list for starting the container 
        default: ""  
        type: list 
        required: False 
      volumes:  
        description: A list of mounted volumes for the docker container "host_path:container_path" like "/tmp/docker:/tmp" 
        type: list 
        default: [] 
        required: False 
      ports:
        type: list
        description: Port binding for the docker container "exposed:internal" like "8081:8080"
        default: [] 
        required: False        
      exposed_ports:  
        description: Exposed ports of the container like "8081" 
        type: string 
        default: [] 
        required: False 
      restart_policy:  
        description: Restart policy [no, on-failure, always, unless-stopped] 
        default: "always" 
        type: string 
        required: False 
      env:  
        description: Map for docker enviroment variables key-value dictionary 
        required: False 
        type: map 
        default: {}
      env_file:
        description: Path to file on remote with env vars
        required: False
        type: string    
        default: ""    
      image_name:  
        description: The name of the image on the host 
        required: True 
        type: string 
      hostname:  
        description: The container's hostname.
        type: string 
        required: False         
      alias:  
        description: Alias name for docker container 
        type: string 
        required: True 
      sleep:
        type: integer
        description: Sleep after image is deployed
        default: 0
        required: False
      docker_network_name: 
        description: Alias name for docker container 
        type: string 
        required: False  
        default:      
    attributes:  
      ip_address:
        description: IP address of dockerized component
        type: string               
    requirements:  
      - network:
          capability: tosca.capabilities.Network
          node: sodalite.nodes.DockerNetwork    
          relationship: tosca.relationships.DependsOn
          occurrences: [ 0, 1 ]
      - registry:
          capability: tosca.capabilities.Node
          node: sodalite.nodes.DockerRegistry    
          relationship: tosca.relationships.DependsOn
          occurrences: [ 1, 1 ]          
    interfaces:  
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard   
        operations:
          create:  
            inputs:  
              env:                  { default: { get_property: [ SELF, env ] } } 
              env_file:             { default: { get_property: [ SELF, env_file ] } } 
              ports:                { default: { get_property: [ SELF, ports ] } } 
              restart_policy:       { default: { get_property: [ SELF, restart_policy ] } } 
              image_name:           { default: { get_property: [ SELF, image_name ] } } 
              alias:                { default: { get_property: [ SELF, alias ] } } 
              exposed_ports:        { default: { get_property: [ SELF, exposed_ports ] } } 
              registry_url:         { default: { get_property: [ SELF, registry, docker_registry_url ] } } 
              volumes:              { default: { get_property: [ SELF, volumes ] } } 
              command:              { default: { get_property: [ SELF, command ] } } 
              docker_network_name:  { default: { get_property: [ SELF, docker_network_name ] } }
              sleep:                { default: { get_property: [ SELF, sleep ] } }
              public_address:       { default: { get_attribute: [ SELF, host, host, public_address ] } }
            implementation:  
              primary: playbooks/add_container.yml 
          delete:  
            inputs:  
              alias:                { default: { get_property: [ SELF, alias ] } }           
            implementation:  
              primary: playbooks/remove_container.yml 

  sodalite.nodes.TestComponent:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      test_delay:
        type: integer
        description: Delay for waiting container to come up
        required: false
      test_port:
        type: integer
        description: Port for testing avalability of the container
        required: false
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              component_name:     { default: { get_attribute: [ SELF, tested_component, tosca_name ] } }
              test_delay:         { default: { get_property: [ SELF, test_delay ] } }
              test_port:          { default: { get_property: [ SELF, test_port ] } }
            implementation:
              primary: playbooks/test_container.yml
    requirements:
      - tested_component:
          node: tosca.nodes.SoftwareComponent  
          relationship: tosca.relationships.DependsOn
          capability: tosca.capabilities.Node