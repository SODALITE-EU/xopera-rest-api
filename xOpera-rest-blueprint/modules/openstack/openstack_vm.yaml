tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - openstack_security_rule.yaml

node_types:

  sodalite.nodes.OpenStack.VM:  
    derived_from: tosca.nodes.Compute 
    properties:  
      network:  
        description: OpenStack network id (network names are not accepted) 
        type: string 
      name:  
        description: Name that should be given to the VM in OpenStack 
        type: string 
      security_groups:  
        description: OpenStack names of the security groups to which the instance should be added.Comma separated string. 
        type: string 
      flavor:  
        description: OpenStack flavor id (flavor names are not accepted) 
        type: string 
      image:  
        description: OpenStack image id (image names are not accepted) 
        type: string 
      key_name:  
        description: OpenStack SSH key name that should be placed on the VM 
        type: string 
      username:  
        description: Username for SSH connection 
        type: string         
    attributes:  
      id:  
        description: OpenStack id of the VM 
        type: string 
      ansible_ip:  
        description: ansible ipv4 
        type: string 
    requirements:  
      - protected_by:  
          relationship: tosca.relationships.DependsOn 
          node: sodalite.nodes.OpenStack.SecurityRules 
          capability: tosca.capabilities.Node 
    capabilities:  
      feature:  
        type: tosca.capabilities.Node 
    interfaces:  
      Standard:  
        type: tosca.interfaces.node.lifecycle.Standard 
        operations:
          create:  
            inputs:  
              network:                  { default: { get_property: [ SELF, network  ] } } 
              flavor:                   { default: { get_property: [ SELF, flavor   ] } } 
              key_name:                 { default: { get_property: [ SELF, key_name ] } } 
              image:                    { default: { get_property: [ SELF, image    ] } } 
              security_groups:          { default: { get_property: [ SELF, security_groups ] } } 
              vm_name:                  { default: { get_property: [ SELF, name ] } } 
              ansible_user:             { default: { get_property: [ SELF, username ] } } 
            implementation: playbooks/vm_create.yml 
          delete:  
            inputs:  
              id:                       { default: { get_attribute: [ SELF, id ] } } 
            implementation: playbooks/vm_delete.yml 